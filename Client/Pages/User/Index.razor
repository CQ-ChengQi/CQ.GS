@page "/user"
@attribute [ReuseTabsPageTitle("用户列表")]

@using CQ.GS.Client.Components;
@using CQ.GS.Client.Services;
@using CQ.GS.Shared;

@inject UserService UserService;


<MudContainer MaxWidth="MaxWidth.False">
    <MudTable @ref="table" Items="users" Hover="true">
        <ToolBarContent>
            <MudText Typo="Typo.h5">用户列表</MudText>
            <MudSpacer />
        </ToolBarContent>
        <HeaderContent>
            <MudTh Style="width:200px;">
                <MudTableSortLabel SortBy="new Func<User, object>(x => x.Name)">
                    姓名
                </MudTableSortLabel>
            </MudTh>
            <MudTh>性别</MudTh>
            <MudTh Style="width:200px;">操作</MudTh>

        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Name">@context.Name</MudTd>
            <MudTd DataLabel="Gender">@context.Gender</MudTd>
            <MudTd DataLabel="Action">
                <MudStack Row="true">
                    <MudButton Size="@Size.Small" Variant="@Variant.Filled" Color="@Color.Primary">编辑</MudButton>
                </MudStack>
            </MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager RowsPerPageString="每页显示条目" InfoFormat="当前页 {first_item} / {last_item}"></MudTablePager>
        </PagerContent>
    </MudTable>
</MudContainer>

@code {
    private MudTable<User>? table;
    private IEnumerable<User> users = new List<User>();

  
    protected override async Task OnInitializedAsync()
    {
        await InitUsers();
    }


    /// <summary>
    /// 分页 。
    /// </summary>
    /// <param name="i"></param>
    private void PageChanged(int i)
    {
        table?.NavigateTo(i);
    }

    /// <summary>
    /// 获取用户列表 。
    /// </summary>
    /// <returns></returns>
    private async Task InitUsers()
    {
        var result = await UserService.GetUsers();
        if (result != null)
        {
            users = result;
        }
    }
}